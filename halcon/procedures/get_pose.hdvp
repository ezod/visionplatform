<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0.1" cs="315301639">
<procedure name="get_pose">
<interface>
<io>
<par name="image"/>
<par name="roi"/>
</io>
<ic>
<par name="int_par"/>
<par name="plate_description"/>
</ic>
<oc>
<par name="target_mat_string"/>
<par name="target_pose"/>
</oc>
</interface>
<body>
<c>* Correct for radial distortion</c>
<l>*get_image_pointer1 (image, Pointer, Type, Width, Height)</l>
<l>change_radial_distortion_cam_par ('fullsize', int_par, 0, CamParOut)</l>
<l>*gen_rectangle1 (roi, 0, 0, Height-1, Width-1)</l>
<l>change_radial_distortion_image (image, roi, ImageRec, int_par, CamParOut)</l>
<c>* Find the target and estimate the pose</c>
<l>try</l>
<l>    find_caltab (ImageRec, PlateRegion, plate_description, 3, 80, 3)</l>
<l>    find_marks_and_pose (ImageRec, PlateRegion, plate_description, \
                         CamParOut, 128, 2, 4, 0.4, 3, 100, \
                         MarkRows, MarkColumns, EstimatedPose)</l>
<l>    caltab_points (plate_description, X, Y, Z)</l>
<l>    camera_calibration (X, Y, Z, MarkRows, MarkColumns, CamParOut, \
                EstimatedPose, 'pose', CamParOut, target_pose, Errors)</l>
<l>    disp_3d_coord_system(600, CamParOut, target_pose, 0.1)</l>
<c>    * Convert the target pose to matrix and output it as a string </c>
<c>    * appending the error</c>
<l>    pose_to_string(target_pose, target_mat_string)</l>
<l>catch(Exception)</l>
<c>    * If no target was found then the pose is an empty string</c>
<l>    target_pose:= []</l>
<l>    target_mat_string:= ''</l>
<l>endtry</l>
<l>return ()</l>
</body>
<docu id="get_pose">
<abstract lang="en_US">Given an Image, the internal parameters of the camera, and the path to the descriptor file of the target, then the program returns the pose of the target relative to the camera.</abstract>
<short lang="en_US">Find the pose of the calibration target.</short>
<parameters>
<parameter id="image">
<description lang="en_US">The image showing the target, whose pose is to be estimated.</description>
<multichannel>false</multichannel>
<multivalue>false</multivalue>
<sem_type>image</sem_type>
<type_list>
<item>byte</item>
<item>int1</item>
<item>int2</item>
<item>uint2</item>
<item>int4</item>
<item>int8</item>
<item>real</item>
<item>cyclic</item>
<item>direction</item>
<item>complex</item>
<item>vector_field</item>
</type_list>
</parameter>
<parameter id="int_par">
<default_type>real</default_type>
<description lang="en_US">The internal parameters of the camera.</description>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<type_list>
<item>integer</item>
<item>real</item>
</type_list>
</parameter>
<parameter id="plate_description">
<default_type>string</default_type>
<default_value>'caltab.descr'</default_value>
<description lang="en_US">File name of the calibration plate description.</description>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="roi">
<description lang="en_US">ROI.</description>
<multivalue>false</multivalue>
<sem_type>region</sem_type>
</parameter>
<parameter id="target_mat_string">
<default_type>string</default_type>
<description lang="en_US">A string, that is separated by commas, containing the elements of the matrix that represents the pose of the target with respect to the camera.</description>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="target_pose"/>
</parameters>
</docu>
</procedure>
</hdevelop>
